// Code generated by mockery v2.23.1. DO NOT EDIT.

package mocks

import (
	repository "dryve/internal/repository"

	mock "github.com/stretchr/testify/mock"
)

// DAO is an autogenerated mock type for the DAO type
type DAO struct {
	mock.Mock
}

// NewFileQuery provides a mock function with given fields:
func (_m *DAO) NewFileQuery() repository.FileQuery {
	ret := _m.Called()

	var r0 repository.FileQuery
	if rf, ok := ret.Get(0).(func() repository.FileQuery); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repository.FileQuery)
		}
	}

	return r0
}

type mockConstructorTestingTNewDAO interface {
	mock.TestingT
	Cleanup(func())
}

// NewDAO creates a new instance of DAO. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewDAO(t mockConstructorTestingTNewDAO) *DAO {
	mock := &DAO{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
